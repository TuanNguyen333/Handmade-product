@page
@model Order.OrderHistoryModel
@{
    ViewData["Title"] = "Order History";
}
<div class="mx-auto max-w-full">
    <div class="mb-6 text-center">
        <h1 class="ml-4 text-left text-2xl font-bold text-black">Order History</h1>
    </div>

    <!-- Filter Buttons -->
    <div class="mb-4 flex w-full flex-wrap justify-center gap-2">
        @foreach (var filter in new[] { "All", "Pending", "Processing", "Delivering", "Shipped", "Canceled", "Refunded" })
        {
            <a href="?filter=@filter"
               class="flex-grow rounded-lg border border-blue-500 p-2 text-center text-lg font-bold
@(Model.CurrentFilter == filter ? "bg-blue-500 text-white" : "bg-white text-black hover:bg-blue-100")">
                @filter Orders
            </a>
        }
    </div>

    <!-- Orders Table -->
    @if (Model.Orders == null || !Model.Orders.Any())
    {
        <p class="text-center text-gray-600">You don't have any orders yet</p>
    }
    else
    {
        <div class="relative flex h-full w-full flex-col rounded-lg bg-white bg-clip-border text-gray-700 shadow-md">
            <div class="overflow-x-auto">
                <table class="w-full table-auto text-left">
                    <thead>
                        <tr class="border-b border-gray-300 bg-gray-50">
                            <th class="w-1/12 p-6 text-lg font-bold text-black">No</th>
                            <th class="w-1/5 p-6 text-lg font-bold text-black">Name</th>
                            <th class="w-[11ch] p-6 text-lg font-bold text-black">Phone</th>
                            <th class="w-[11ch] p-6 text-lg font-bold text-black">Order Date</th>
                            <th class="p-6 text-lg font-bold text-black">Total Price</th>
                            <th class="w-1/6 p-6 text-lg font-bold text-black">Status</th>
                            <th class="w-1/6 p-6 text-lg font-bold text-black">Address</th>
                            <th class="w-1/5 p-6 text-lg font-bold text-black">Note</th>
                            <th class="w-1/6 p-6 text-lg font-bold text-black">Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @{
                            var index = 1;
                        }
                        @foreach (var order in Model.Orders)
                        {
                            <tr class="hover:bg-gray-50">
                                <td class="border-b border-gray-200 p-6 text-lg">@index</td>
                                <td class="border-b border-gray-200 p-6 text-lg">@order.CustomerName</td>
                                <td class="border-b border-gray-200 p-6 text-lg">@order.Phone</td>
                                <td class="border-b border-gray-200 p-6 text-lg">@order.OrderDate.ToString("dd/MM/yyyy")</td>
                                <td class="border-b border-gray-200 p-6 text-lg">@order.TotalPrice.ToString("C")</td>
                                <td class="border-b border-gray-200 p-6 text-lg">@order.Status</td>
                                <td class="border-b border-gray-200 p-6 text-lg">@order.Address</td>
                                <td class="border-b border-gray-200 p-6 text-lg">@order.Note</td>
                                <td class="border-b border-gray-200 p-6 text-lg">
                                    <div class="flex space-x-2">
                                        @if (order.Status == "Pending")
                                        {
                                            <button class="rounded bg-green-500 px-4 py-2 text-white hover:bg-green-600">Update</button>
                                        }
                                        @if (order.Status == "Pending" || order.Status == "Processing")
                                        {
                                            <button class="rounded bg-red-500 px-4 py-2 text-white hover:bg-red-600"
                                                    onclick="openConfirmModal('@order.Id')">
                                                Cancel
                                            </button>
                                        }
                                    </div>
                                </td>
                            </tr>
                            index++;
                        }
                    </tbody>
                </table>
            </div>
        </div>
    }
</div>

<!-- Confirmation Modal -->
<div id="confirmModal" class="fixed inset-0 z-50 flex items-center justify-center bg-black bg-opacity-50" style="display: none;">
    <div class="w-1/3 rounded-lg bg-white p-6 shadow-lg">
        <h2 class="mb-4 text-xl font-bold">Cancel Order!</h2>
        <p class="mb-6">Are you sure you want to cancel this order?</p>
        <div class="flex justify-end space-x-4">
            <button id="confirmCancelBtn" class="rounded bg-red-500 px-4 py-2 text-white hover:bg-red-600">Yes</button>
            <button onclick="closeConfirmModal()" class="rounded bg-gray-300 px-4 py-2 hover:bg-gray-400">No</button>
        </div>
    </div>
</div>


<script>
    let orderIdToCancel = null;

    function openConfirmModal(orderId) {
        orderIdToCancel = orderId;
        document.getElementById('confirmModal').style.display = 'flex';
    }

    function closeConfirmModal() {
        document.getElementById('confirmModal').style.display = 'none';
    }

    document.getElementById('confirmCancelBtn').addEventListener('click', async function () {
        if (orderIdToCancel) {
            try {
                console.log(`Sending PATCH request to cancel order: ${orderIdToCancel}`);
                const response = await fetch(`/Order/OrderHistory?handler=PatchCancelOrder&orderId=${orderIdToCancel}`, {
                    method: 'PATCH',
                    headers: {
                        'Content-Type': 'application/json'
                    }
                });

                if (!response.ok) {
                    throw new Error('Network response was not ok');
                }

                const result = await response.json();
                if (result.success) {
                    console.log(`Order ${orderIdToCancel} canceled successfully.`);
                    location.reload(); // Reload the page to reflect changes
                } else {
                    console.error(`Failed to cancel order ${orderIdToCancel}. Message: ${result.message}`);
                    alert(result.message || 'Failed to cancel the order.');
                }
            } catch (error) {
                console.error('There was a problem with the fetch operation:', error);
                alert('An error occurred while canceling the order.');
            } finally {
                closeConfirmModal();
            }
        }
    });
</script>