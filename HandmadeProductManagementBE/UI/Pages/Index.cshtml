@page
@model UI.Pages.IndexModel
@{
    ViewData["Title"] = "Home page";
}

<div class="flex px-40">
    <div class="w-1/2 overflow-hidden">
        @await Html.PartialAsync("HomePage/_Top10SellingProducts", Model.Top10SellingProducts)
    </div>

    <div class="w-1/2 overflow-hidden">
        @await Html.PartialAsync("HomePage/_Top10NewProducts", Model.Top10NewProducts)
    </div>
</div>

@section Scripts {
    <!-- Swiper Initialization for Selling Products -->
    <script>

        var sellingSwiper = new Swiper('.selling-products-swiper', {
            slidesPerView: 1,
            spaceBetween: 30,
            loop: true,
            pagination: {
                el: '.selling-products-swiper .swiper-pagination',
                clickable: true,
            },
            navigation: {
                nextEl: '.selling-products-swiper .swiper-button-next',
                prevEl: '.selling-products-swiper .swiper-button-prev',
            },
        });
    </script>

    <!-- Swiper Initialization for New Products -->
    <script>
        var newProductsSwiper = new Swiper('.new-products-swiper', {
            slidesPerView: 1,
            spaceBetween: 30,
            loop: true,
            pagination: {
                el: '.new-products-swiper .swiper-pagination',
                clickable: true,
            },
            navigation: {
                nextEl: '.new-products-swiper .swiper-button-next',
                prevEl: '.new-products-swiper .swiper-button-prev',
            },
        });
    </script>

    <script>
        // Ensure the token is properly encoded to prevent XSS attacks
        var token = @Html.Raw(System.Text.Json.JsonSerializer.Serialize(Model.Token));
                        console.log("Token:", token); // You can remove this line after verifying

        // Example usage of the token in an API request
        /*
        fetch('/api/your-endpoint', {
            method: 'GET',
            headers: {
                'Authorization': `Bearer ${token}`,
                'Content-Type': 'application/json'
            }
        })
        .then(response => response.json())
        .then(data => {
            console.log(data);
        })
        .catch(error => console.error('Error:', error));
        */
    </script>


}
